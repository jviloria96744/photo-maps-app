name: Main Application

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  IMAGE_PROCESSOR_SECRET_NAME: ${{ secrets.IMAGE_PROCESSOR_SECRET_NAME }}
  IMAGE_PROCESSOR_SECRET_KEY: ${{ secrets.IMAGE_PROCESSOR_SECRET_KEY }}
on:
  push:
    branches:
      - main
    paths:
      - "cdk-stacks/app/**"
      - ".github/workflows/app.yaml"
      - ".github/actions/**"
      - "admin-portal/**"
      - "client-web/**"
      - "lambdas/**"
jobs:
  change-detector:
    name: Detect File Changes And Artifact Existence
    runs-on: ubuntu-latest
    outputs:
      web-client: ${{ steps.filter.outputs.web-client }}
      admin-portal: ${{ steps.filter.outputs.admin-portal }}
      image-processor: ${{ steps.filter.outputs.image-processor }}
      app-server: ${{ steps.filter.outputs.app-server }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            web-client:
              - 'client-web/**'
            admin-portal:
              - 'admin-portal/**'
            image-processor:
              - 'lambdas/image_processor/**'
              - 'lambdas/image_deleter/**'
            app-server:
              - 'lambdas/app_server/**'
  build-admin-portal:
    name: Create Admin Portal Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and Upload Artifact
        uses: ./.github/actions/build-web-artifact
        with:
          directory: "admin-portal"
  build-client-web:
    name: Create Web Client Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and Upload Artifact
        uses: ./.github/actions/build-web-artifact
        with:
          directory: "client-web"
  test-image-processor-lambda:
    needs: change-detector
    if: ${{ needs.diff-detector.outputs.image-processor == 'true' }}
    name: Run Image Processor Unit Tests
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS CLI and Credentials
        uses: ./.github/actions/configure-aws-cli
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9.16"
      - name: Install Dependencies
        run: cd lambdas/image_processor && pip install -r requirements_dev.txt
      - name: Run Tests
        run: cd lambdas/image_processor && python -m pytest tests/
  deploy:
    name: Build/Deploy Application Infrastructure
    runs-on: ubuntu-latest
    needs: [build-admin-portal, build-client-web, test-image-processor-lambda]
    if: |
      always() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled')
    permissions:
      actions: write
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS CLI and Credentials
        uses: ./.github/actions/configure-aws-cli
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9.16"
      - name: Download Admin Portal Artifact
        uses: actions/download-artifact@v3
        with:
          name: admin-portal-artifact
          path: ./admin-portal/dist/
      - name: Download Web Client Artifact
        uses: actions/download-artifact@v3
        with:
          name: client-web-artifact
          path: ./client-web/dist/
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Install Dependencies
        run: cd cdk-stacks/app && npm install
      - name: Deploy Stack
        run: cd cdk-stacks/app && cdk deploy --require-approval "never"
