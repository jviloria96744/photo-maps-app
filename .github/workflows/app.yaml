name: Main Application

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
on:
  push:
    branches:
      - main
    paths:
      - "cdk-stacks/app/**"
      - ".github/workflows/app.yaml"
jobs:
  build-admin-portal:
    name: Create Admin Portal Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      - name: Build Admin Portal Deployment Artifact
        run: cd admin-portal && npm install && npm run build
      - name: Archive Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: admin-portal-artifact
          path: ./admin-portal/dist/
          if-no-files-found: error
          retention-days: 1
  deploy:
    name: Build/Deploy Application Infrastructure
    runs-on: ubuntu-latest
    needs: [build-admin-portal]
    permissions:
      actions: write
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS CLI and Credentials
        uses: ./.github/actions/configure-aws-cli
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      # - name: Build Admin Portal Deployment Artifact
      #   run: cd admin-portal && npm install && npm run build
      - name: Download Admin Portal Artifact
        uses: actions/download-artifact@v3
        with:
          name: admin-portal-artifact
          path: ./admin-portal/dist/
      - name: Test Outputting Download
        run: cd admin-portal && ls
      # - name: Build Web Client Deployment Artifact
      #   run: cd client-web && npm install && npm run build
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Install Dependencies
        run: cd cdk-stacks/app && npm install
      - name: Synth Stack
        run: cd cdk-stacks/app && cdk synth
      - name: Deploy Stack
        run: cd cdk-stacks/app && cdk deploy --require-approval "never"
